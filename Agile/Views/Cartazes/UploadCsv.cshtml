@{
    Layout = "_Layout";
    ViewData["Title"] = "Upload de Dados";


@section Styles {
    <link rel="stylesheet" href="~/css/AgileIndex.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/layout.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/responsive.css" asp-append-version="true" />
}


    // Determinar imagem do fundo
    string fundoSelecionado = ViewData["FundoSelecionado"]?.ToString() ?? "padrao";
    string tamanhoSelecionado = ViewData["TamanhoSelecionado"]?.ToString() ?? "A5";
    string fundoImagem = "";
    
    if (fundoSelecionado == "padrao")
    {
        fundoImagem = tamanhoSelecionado == "A4" ? Url.Content("~/fundos/fundoPadraoA4.png") : Url.Content("~/fundos/fundoPadraoA5.png");
    }
}

<div class="d-flex align-items-center justify-content-center min-vh-100" style="background: linear-gradient(135deg, #0b0b0b 0%, #000 60%);">
    <div class="card bg-dark text-light shadow-lg border-0 rounded-4" style="max-width: 600px; width: 100%;">
        <div class="card-body p-5">

            <!-- Título -->
            <div class="text-center mb-4">
                <h2 class="fw-bold text-warning">Gerar Cartazes</h2>
                <p class="text-secondary">Transforme seu arquivo CSV em cartazes promocionais de forma ágil e prática.</p>
            </div>

            <!-- Prévia do fundo selecionado -->
            <div class="text-center mb-4">
                <p class="fw-semibold">Fundo selecionado:</p>
                @if (!string.IsNullOrEmpty(fundoImagem))
                {
                    <img src="@fundoImagem" alt="Fundo selecionado" class="img-fluid rounded shadow-sm" style="max-height: 200px; border:1px solid #222;">
                }
            </div>

            <!-- Formulário -->
            @{
                string actionName = tamanhoSelecionado == "A4" ? "GerarCartazA4" : "GerarCartazA5";
            }
            
            @using (Html.BeginForm(actionName, "Cartazes", FormMethod.Post, new { enctype = "multipart/form-data", @class = "needs-validation", novalidate = "novalidate" }))
            {
                @Html.AntiForgeryToken()

                <!-- Campo hidden para passar o fundo selecionado -->
                <input type="hidden" name="fundoSelecionado" value="@fundoSelecionado" />

                <div class="mb-3">
                    <label for="csv" class="form-label fw-semibold">📂 Arquivo CSV</label>
                    <input type="file" name="csv" id="csv" class="form-control bg-black text-light border-secondary" required />
                    <div class="form-text text-secondary">
                        Estrutura esperada: <code>descricao;preco</code>
                    </div>
                </div>

                <div class="d-grid gap-2">
                    <button type="button" class="btn btn-outline-warning py-2 fw-bold shadow-sm" onclick="previewCartazes()">
                        👁️ Pré-visualizar
                    </button>
                    <button type="submit" class="btn btn-warning py-2 fw-bold shadow-sm">
                        🚀 Gerar PDF @tamanhoSelecionado
                    </button>
                </div>
            }

        </div>
    </div>
</div>

<script>
    // Ativar validação Bootstrap
    (function () {
        'use strict'
        var forms = document.querySelectorAll('.needs-validation')
        Array.prototype.slice.call(forms).forEach(function (form) {
            form.addEventListener('submit', function (event) {
                if (!form.checkValidity()) {
                    event.preventDefault()
                    event.stopPropagation()
                }
                form.classList.add('was-validated')
            }, false)
        })
    })()

    function previewCartazes() {
        const csvFile = document.getElementById('csv').files[0];
        if (!csvFile) {
            alert('Por favor, selecione um arquivo CSV primeiro.');
            return;
        }

        const formData = new FormData();
        formData.append('csv', csvFile);
        formData.append('fundoSelecionado', '@fundoSelecionado');
        formData.append('tamanhoSelecionado', '@tamanhoSelecionado');

        // Mostrar loading
        const previewBtn = event.target;
        const originalText = previewBtn.innerHTML;
        previewBtn.innerHTML = '⏳ Processando...';
        previewBtn.disabled = true;

        fetch('@Url.Action("PreviewCartazes", "Cartazes")', {
            method: 'POST',
            body: formData
        })
        .then(response => {
            if (response.ok) {
                window.location.href = '@Url.Action("Preview", "Cartazes")';
            } else {
                throw new Error('Erro ao processar CSV');
            }
        })
        .catch(error => {
            console.error('Erro:', error);
            alert('Erro ao processar o arquivo CSV. Verifique se o formato está correto.');
        })
        .finally(() => {
            previewBtn.innerHTML = originalText;
            previewBtn.disabled = false;
        });
    }
</script>
